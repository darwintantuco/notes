{"componentChunkName":"component---src-templates-note-template-tsx","path":"/ecto/query","result":{"data":{"markdownRemark":{"html":"<h4 id=\"ecto-query\" style=\"position:relative;\"><a href=\"#ecto-query\" aria-label=\"ecto query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ecto Query</h4>\n<p>uses Elixir macros to create DSL</p>\n<p>it's possible to query a table using table names (without a schema)</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">posts_by_tony <span class=\"token operator\">=</span> from post <span class=\"token operator\">in</span> Post<span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">join:</span> user <span class=\"token operator\">in</span> assoc<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">where:</span> user<span class=\"token punctuation\">.</span>firstname <span class=\"token operator\">==</span> <span class=\"token string\">\"Tony\"</span>\n\nquery <span class=\"token operator\">=</span> from<span class=\"token punctuation\">(</span>post <span class=\"token operator\">in</span> posts_by_tony<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">where:</span> post<span class=\"token punctuation\">.</span>title <span class=\"token operator\">==</span> <span class=\"token string\">\"Post 1\"</span><span class=\"token punctuation\">)</span>\n\nRepo<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"keyword-syntax\" style=\"position:relative;\"><a href=\"#keyword-syntax\" aria-label=\"keyword syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keyword syntax</h4>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">title <span class=\"token operator\">=</span> <span class=\"token string\">\"Post 1\"</span>\n\nquery <span class=\"token operator\">=</span> from<span class=\"token punctuation\">(</span>user <span class=\"token operator\">in</span> User<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">join:</span> post <span class=\"token operator\">in</span> assoc<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:posts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">where:</span> user<span class=\"token punctuation\">.</span>firstname <span class=\"token operator\">==</span> <span class=\"token string\">\"Tony\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">where:</span> post<span class=\"token punctuation\">.</span>title <span class=\"token operator\">==</span> <span class=\"token operator\">^</span>title<span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">order_by:</span> <span class=\"token punctuation\">[</span><span class=\"token attr-name\">desc:</span> user<span class=\"token punctuation\">.</span>firstname<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nRepo<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"macro--expression-syntax\" style=\"position:relative;\"><a href=\"#macro--expression-syntax\" aria-label=\"macro  expression syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Macro / expression syntax</h4>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">title <span class=\"token operator\">=</span> <span class=\"token string\">\"Post 1\"</span>\n\nquery <span class=\"token operator\">=</span>\n  User\n  <span class=\"token operator\">|></span> join<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:inner</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> post <span class=\"token operator\">in</span> assoc<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:posts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> where<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> _post<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>firstname <span class=\"token operator\">==</span> <span class=\"token string\">\"Tony\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> where<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>_user<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>title <span class=\"token operator\">==</span> <span class=\"token operator\">^</span>title<span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> order_by<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> _post<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>firstname<span class=\"token punctuation\">)</span>\n\nRepo<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span></code></pre></div>\n<p>pin operator protects us from SQL injection</p>\n<p>value added by the pin operator is converted to SQL query parameter</p>\n<p>by default Ecto combines <code class=\"language-text\">where</code> clauses with <code class=\"language-text\">and</code></p>\n<p>you can also use <code class=\"language-text\">or</code> or <code class=\"language-text\">or_where</code> keyword</p>\n<h4 id=\"composing-queries\" style=\"position:relative;\"><a href=\"#composing-queries\" aria-label=\"composing queries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Composing queries</h4>\n<h4 id=\"see-generated-sql\" style=\"position:relative;\"><a href=\"#see-generated-sql\" aria-label=\"see generated sql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See generated SQL</h4>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">query <span class=\"token operator\">=</span> from user <span class=\"token operator\">in</span> User<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">where:</span> user<span class=\"token punctuation\">.</span>firstname <span class=\"token operator\">==</span> <span class=\"token string\">\"Bob\"</span>\n\nRepo<span class=\"token punctuation\">.</span>to_sql<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:all</span><span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"executing-raw-sql-queries\" style=\"position:relative;\"><a href=\"#executing-raw-sql-queries\" aria-label=\"executing raw sql queries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Executing raw SQL queries</h4>\n<p>avoid this as much as possible</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">Ecto<span class=\"token punctuation\">.</span>Adapters<span class=\"token punctuation\">.</span>SQL<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span>Repo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"select * from users\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># or</span>\nRepo<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from users\"</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"date":"March 12, 2021","path":"/ecto/query","title":"Query","category":"Ecto"}}},"pageContext":{}}}