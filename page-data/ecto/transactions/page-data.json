{"componentChunkName":"component---src-templates-note-template-tsx","path":"/ecto/transactions","result":{"data":{"markdownRemark":{"html":"<h4 id=\"transactions\" style=\"position:relative;\"><a href=\"#transactions\" aria-label=\"transactions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transactions</h4>\n<ul>\n<li>runs in order</li>\n<li>only unhandled errors will trigger a rollback</li>\n<li>use Repo functions that raises an error (<code class=\"language-text\">insert!</code>)</li>\n<li>if you have a non database operation, put it at the end</li>\n<li>hard to track errors when an operation fail</li>\n</ul>\n<p>prefer using <code class=\"language-text\">Multi</code></p>\n<p>transactions might be a good fit if you're only running a small number of operations</p>\n<p>and you don't need to track which operation failed</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>changeset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">%</span>User<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span><span class=\"token attr-name\">firstname:</span> <span class=\"token string\">\"Tony\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">lastname:</span> <span class=\"token string\">\"Stark\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nprofile <span class=\"token operator\">=</span> Profile<span class=\"token punctuation\">.</span>changeset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">%</span>Profile<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span><span class=\"token attr-name\">role:</span> <span class=\"token string\">\"avenger\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># rollbacks any changes since user_id is required when creating profile</span>\nRepo<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">(</span><span class=\"token keyword\">fn</span> <span class=\"token operator\">-></span>\n  Repo<span class=\"token punctuation\">.</span>insert!<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n  Repo<span class=\"token punctuation\">.</span>insert!<span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"date":"March 12, 2021","path":"/ecto/transactions","title":"Transactions","category":"Ecto"}}},"pageContext":{}}}