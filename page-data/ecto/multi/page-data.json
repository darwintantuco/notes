{"componentChunkName":"component---src-templates-note-template-tsx","path":"/ecto/multi","result":{"data":{"markdownRemark":{"html":"<h4 id=\"multi\" style=\"position:relative;\"><a href=\"#multi\" aria-label=\"multi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multi</h4>\n<ul>\n<li>runs in order</li>\n<li>group database operations into a data structure</li>\n<li>easy to track errors because of the return value</li>\n</ul>\n<p>when Multi contains operations that uses changesets,</p>\n<p>if one of the changesets is invalid, it won't bother sending it to database,</p>\n<p>because of this behaviour, prefer to use changesets when using Multi</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>changeset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">%</span>User<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span><span class=\"token attr-name\">firstname:</span> <span class=\"token string\">\"Tony\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">lastname:</span> <span class=\"token string\">\"Stark\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nmulti <span class=\"token operator\">=</span>\n  Ecto<span class=\"token punctuation\">.</span>Multi<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> Ecto<span class=\"token punctuation\">.</span>Multi<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:user</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">|></span> Ecto<span class=\"token punctuation\">.</span>Multi<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:profile</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fn</span> repo<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span><span class=\"token attr-name\">user:</span> user<span class=\"token punctuation\">}</span> <span class=\"token operator\">-></span>\n    user\n    <span class=\"token operator\">|></span> Ecto<span class=\"token punctuation\">.</span>build_assoc<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:profiles</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">|></span> Profile<span class=\"token punctuation\">.</span>changeset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span><span class=\"token attr-name\">role:</span> <span class=\"token string\">\"avenger\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">|></span> repo<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n\nRepo<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">(</span>multi<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"date":"March 12, 2021","path":"/ecto/multi","title":"Multi","category":"Ecto"}}},"pageContext":{}}}