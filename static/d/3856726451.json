{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"4aabec39-96d1-591e-b759-270dd491f8ea","excerpt":"Unions  macro an abstract type that represents a set of specific concrete types Interfaces  macro similar to unions, add a requirement that any member types must\ndefine a set of included fields an object can implement many interfaces","frontmatter":{"date":"April 11, 2021","path":"/absinthe/abstract-types","title":"Abstract Types","category":"Absinthe"}}},{"node":{"id":"01683918-3833-5a74-8caa-05ef268de736","excerpt":"need to define: parse - converts value from user to elixir code serialize - converts value from elixir to JSON scalars can be used as input or output types","frontmatter":{"date":"April 11, 2021","path":"/absinthe/custom-scalar-types","title":"Custom Scalar Types","category":"Absinthe"}}},{"node":{"id":"8be0c53e-fa71-5857-a4ea-1791b11bb81e","excerpt":"tool that can help your application fetch data in an optimal way by implementing batching and caching","frontmatter":{"date":"March 14, 2021","path":"/absinthe/dataloader","title":"Dataloader","category":"Absinthe"}}},{"node":{"id":"654c9060-f0b6-5462-8c6e-aaf74bb29d64","excerpt":"finite set of possible values suited for values that are defined and unlikely to change","frontmatter":{"date":"April 11, 2021","path":"/absinthe/enum-type","title":"Enum Type","category":"Absinthe"}}},{"node":{"id":"d740a180-6d94-52fb-b1cd-48912df96830","excerpt":"allows you to group related arguments","frontmatter":{"date":"April 11, 2021","path":"/absinthe/input-object-type","title":"Input Object Type","category":"Absinthe"}}},{"node":{"id":"2defdc58-1d74-53ad-b88a-4edb2e4f7c92","excerpt":"macro from","frontmatter":{"date":"April 11, 2021","path":"/absinthe/object-type","title":"Object Type","category":"Absinthe"}}},{"node":{"id":"9c9dbbeb-2f22-5692-87ff-fb7298c7e7ea","excerpt":"absinthe core graphQL functionality absinthe_plug support handling requests over HTTP/s absinthe_phoenix support graphQL subscription over phoenix channels","frontmatter":{"date":"March 08, 2021","path":"/absinthe/overview","title":"Overview","category":"Absinthe"}}},{"node":{"id":"3fda601d-32ac-5284-9760-7ec1083a7f55","excerpt":"Field Arguments way for users to input field that can be used to filter the results Using Literals not ideal for dynamic values Using Variables typed by convention, enum values are passed in all uppercase letters without quotes exclamation mark means…","frontmatter":{"date":"April 11, 2021","path":"/absinthe/queries","title":"Queries","category":"Absinthe"}}},{"node":{"id":"13774d92-bc69-5396-8b1c-494482011092","excerpt":"trigger business logic ideally it should call context functions","frontmatter":{"date":"April 11, 2021","path":"/absinthe/resolvers","title":"Resolvers","category":"Absinthe"}}},{"node":{"id":"328c9667-39c8-52e5-9fce-38d660989522","excerpt":"Organizing a Schema Type modules contain a set of types for inclusion in a schema  import_types should only be used in schema import_fields should only be used in schema inside ,  and  macro Schema Resolution when a resolver is not defined for a…","frontmatter":{"date":"March 08, 2021","path":"/absinthe/schema","title":"Schema","category":"Absinthe"}}},{"node":{"id":"1052cde2-819d-5d51-b359-1c806170d5c7","excerpt":"efficient procedures for a solving a problem","frontmatter":{"date":"March 18, 2021","path":"/algorithm/overview","title":"Overview","category":"Algorithm"}}},{"node":{"id":"051a9c6b-62a8-52bc-bb9d-a0a807cf68d5","excerpt":"Bearer Token value that goes into Authorization header of any HTTP request can be a JWT","frontmatter":{"date":"April 10, 2021","path":"/authentication/auth-tokens","title":"Auth Tokens","category":"Authentication"}}},{"node":{"id":"f7bdcfd7-67ef-5b1a-b05d-dd2ce2370060","excerpt":"enforce the use https do not use URL query parameters to exchange sensitive data prevent brute force attacks add rate limiter limit number of retries ban users that hit too many server errors avoid storing auth token in local storage","frontmatter":{"date":"March 15, 2021","path":"/authentication/best-practices","title":"Best Practices","category":"Authentication"}}},{"node":{"id":"51f97244-0729-5343-978d-0bbd74aa4954","excerpt":"","frontmatter":{"date":"March 15, 2021","path":"/authentication/jwt","title":"JWT","category":"Authentication"}}},{"node":{"id":"b4435ba5-8193-545a-ba01-1a432bba3ff7","excerpt":"Inline style Style tag in head section External style sheet","frontmatter":{"date":"April 27, 2020","path":"/css/adding-css-to-html","title":"Adding CSS to HTML","category":"CSS"}}},{"node":{"id":"d7ff5b32-2646-5213-b449-8b596507bb7f","excerpt":"General avoid using id for styling, always use classes use variables for magic numbers hex colors use modular scale for font sizes follow 8-point grid guideline Packages prefer sanitize.css over normalize Media Queries prefer  over , also means…","frontmatter":{"date":"April 27, 2020","path":"/css/best-practices","title":"Best Practices","category":"CSS"}}},{"node":{"id":"e1df0d97-9d2c-5f22-b533-d1be9e4e8a88","excerpt":"more than one at a time non blocking concurrent","frontmatter":{"date":"April 11, 2021","path":"/computer-science/asynchronous","title":"Asynchronous","category":"Computer Science"}}},{"node":{"id":"c14bb82d-359e-5c57-9056-7653f01fef24","excerpt":"one at a time and in order blocking","frontmatter":{"date":"April 11, 2021","path":"/computer-science/synchronous","title":"Synchronous","category":"Computer Science"}}},{"node":{"id":"9e612177-e628-5607-9990-16c76c33225b","excerpt":"ordered list Big-O of common operations Operation Big O access O(1) searching O(n) Big O of common methods in Javascript Method Big O push O(1) pop O(1) forEach O(n) map/filter/reduce O(n) sort O(n log(n)) shift O(n) unshift O(n) slice O(n)","frontmatter":{"date":"May 08, 2020","path":"/data-structures/arrays","title":"Arrays","category":"Data Structures"}}},{"node":{"id":"5551da4f-de4a-5c67-b245-31213119c56b","excerpt":"unordered key value pairs When to use objects? when you need fast access, insertion and removal when order doesn't matter Big O of common operations Operation Big O insertion O(1) removal O(1) access O(1) Big O of common methods (javascript…","frontmatter":{"date":"May 08, 2020","path":"/data-structures/objects","title":"Objects","category":"Data Structures"}}},{"node":{"id":"7067caff-d85b-5b02-8080-d47ac4921339","excerpt":"way to store and organize data so it can be use efficiently","frontmatter":{"date":"March 18, 2021","path":"/data-structures/overview","title":"Overview","category":"Data Structures"}}},{"node":{"id":"3680a7fd-14d4-53f6-b745-b1bef1cd4e4b","excerpt":"Internal data data is generated in code functions to use:    External data data comes from external source (user input, forms, etc) always use changesets when dealing with external data functions to use:    cast creates a changeset using external…","frontmatter":{"date":"March 08, 2021","path":"/ecto/best-practices","title":"Best Practices","category":"Ecto"}}},{"node":{"id":"78bfdbba-280c-5b95-8498-d61bf1f15e24","excerpt":"help us with the entire life cycle of making a change casting and filtering user input validate input send input to database and validate the result built in validations starts with  Constraints enforced by database ecto will always run all…","frontmatter":{"date":"March 08, 2021","path":"/ecto/changesets","title":"Changesets","category":"Ecto"}}},{"node":{"id":"2999da01-d786-5356-9f0b-b6f00d0720d6","excerpt":"create and alter tables in your database ecto keeps track of which migrations have already been run using  table by default migrations are run within a database transaction, to disable it, define  in migration file Adding a migration Rollback a…","frontmatter":{"date":"March 12, 2021","path":"/ecto/migrations","title":"Migrations","category":"Ecto"}}},{"node":{"id":"aa4b0634-d2e0-55fd-830b-3e9ed30788cf","excerpt":"runs in order group database operations into a data structure easy to track errors because of the return value when Multi contains operations that uses changesets, if one of the changesets is invalid, it won't bother sending it to database,\nbecause…","frontmatter":{"date":"March 12, 2021","path":"/ecto/multi","title":"Multi","category":"Ecto"}}},{"node":{"id":"0e8f3c36-bbd5-5d10-bd1c-7acdc40f2467","excerpt":"Repo interface to database you create your own  module per application Query api for writing queries Schema Changeset provides functions for creating and manipulating changesets a data structure that captures all aspects of making a change\nto your…","frontmatter":{"date":"March 12, 2021","path":"/ecto/overview","title":"Overview","category":"Ecto"}}},{"node":{"id":"103c2399-a154-538a-a628-4b5967a8af14","excerpt":"uses Elixir macros to create DSL it's possible to query a table using table names (without a schema) pin operator protects us from SQL injection value added by the pin operator is converted to SQL query parameter by default Ecto combines  clauses…","frontmatter":{"date":"March 12, 2021","path":"/ecto/query","title":"Query","category":"Ecto"}}},{"node":{"id":"3c9bfae9-f9e0-5109-90ed-a3af6936433a","excerpt":"Schemas map data from any source to elixir code Advantage of using schemas in queries automatic type conversion no need for  option return value is a struct Nested Associations you can use   doesn't work in nested associations Many to many…","frontmatter":{"date":"March 12, 2021","path":"/ecto/schemas","title":"Schemas","category":"Ecto"}}},{"node":{"id":"52a07b51-f01d-5e65-9c3d-2a01b4c390be","excerpt":"runs in order only unhandled errors will trigger a rollback use Repo functions that raises an error () if you have a non database operation, put it at the end hard to track errors when an operation fail transactions might be a good fit if you're only…","frontmatter":{"date":"March 12, 2021","path":"/ecto/transactions","title":"Transactions","category":"Ecto"}}},{"node":{"id":"41c73d8e-dc22-5cc4-b301-655c9eeffd7d","excerpt":"simple wrappers around state","frontmatter":{"date":"March 07, 2021","path":"/elixir/agents","title":"Agents","category":"Elixir"}}},{"node":{"id":"4c1275a1-c714-59e8-aea5-0342dfbd17fb","excerpt":"","frontmatter":{"date":"March 07, 2021","path":"/elixir/alias","title":"alias","category":"Elixir"}}},{"node":{"id":"5d4bc905-645d-58e0-9cbe-2865fa682e1f","excerpt":"Booleans true / false nil & false are falsy all other values are truthy Atoms constants Aliases capitalized identifier () converted to atom during compilation  alias translates by default to the atom","frontmatter":{"date":"March 14, 2021","path":"/elixir/basic-types","title":"Basic Types","category":"Elixir"}}},{"node":{"id":"0622d2ce-c3ce-58f5-8d64-810d106aaf26","excerpt":"never convert user input strings to atom, atoms are not garbage collected use typespecs avoid using any / term add types for private functions","frontmatter":{"date":"March 07, 2021","path":"/elixir/best-practices","title":"Best Practices","category":"Elixir"}}},{"node":{"id":"a3c575fb-4ef4-5cfb-8658-d850b5ec7c4f","excerpt":"think of  as wrapping the named function in an anonymous function","frontmatter":{"date":"March 14, 2021","path":"/elixir/capture-operator","title":"Capture Operator","category":"Elixir"}}},{"node":{"id":"6ca860a4-9f0d-53e7-9233-caa88de6a890","excerpt":"Comprehensions 3 parts generators filters collectables","frontmatter":{"date":"March 07, 2021","path":"/elixir/comprehensions","title":"Comprehensions","category":"Elixir"}}},{"node":{"id":"26cf2f7c-7a23-5ba6-a215-6019e264e33a","excerpt":"Conventions Naming size - constant length - linear elixir identifiers must start with a letter or underscore any value other than nil and false is truthy you can use erlang modules using  followed by erlang library in lowercase File Extension…","frontmatter":{"date":"March 07, 2021","path":"/elixir/conventions","title":"Conventions","category":"Elixir"}}},{"node":{"id":"fc40efb5-1299-5975-877a-bdce44060def","excerpt":"NaiveDateTime contains date and time DateTime contains date and time including time zone","frontmatter":{"date":"March 14, 2021","path":"/elixir/dates","title":"Dates","category":"Elixir"}}},{"node":{"id":"d96bcd0a-7c0e-50f2-a7ec-2001d1a85124","excerpt":"","frontmatter":{"date":"March 14, 2021","path":"/elixir/debugging","title":"Debugging","category":"Elixir"}}},{"node":{"id":"ac5f1a96-ee1a-5061-a921-06bddb7a6ec3","excerpt":"unit testing framework for elixir","frontmatter":{"date":"March 23, 2021","path":"/elixir/ex-unit","title":"ExUnit","category":"Elixir"}}},{"node":{"id":"eaed4995-bf2a-5306-948f-927cc8aa4104","excerpt":"give up ordering","frontmatter":{"date":"March 07, 2021","path":"/elixir/flow","title":"Flow","category":"Elixir"}}},{"node":{"id":"e05e7514-34de-5218-bf31-ef87c2ea5d7f","excerpt":"create stateful processes that we can interact with run some code in the background continuously listens for requests and can respond with results  adds  injects all functions required by GenServer behaviour Callbacks init/1 create in-memory state…","frontmatter":{"date":"March 07, 2021","path":"/elixir/genserver","title":"GenServer","category":"Elixir"}}},{"node":{"id":"01263596-d3e9-5149-b7ae-2e54db21b2a9","excerpt":"access functions or macros from other modules without using fully qualified name by default, it imports all module functions and macros use  option to only import function you need","frontmatter":{"date":"March 07, 2021","path":"/elixir/import","title":"import","category":"Elixir"}}},{"node":{"id":"f72398e8-502a-554f-8183-46b16f16b8a9","excerpt":"ordered keys must be atoms keys can be given more than once mainly used for passing optional values","frontmatter":{"date":"March 07, 2021","path":"/elixir/keyword-lists","title":"Keyword Lists","category":"Elixir"}}},{"node":{"id":"7e9cad05-5131-594b-8a85-15aebcee9faf","excerpt":"linked lists not an array","frontmatter":{"date":"March 07, 2021","path":"/elixir/lists","title":"Lists","category":"Elixir"}}},{"node":{"id":"79fe8033-b5df-50ba-bc0e-cff16d80c0cf","excerpt":"unordered collection of key / value pairs allow any value as key Accessing  - returns nil when key is not found  - raises an error when key is not found prefer pattern matching or map.field syntax over Map module functions Updating","frontmatter":{"date":"March 07, 2021","path":"/elixir/maps","title":"Maps","category":"Elixir"}}},{"node":{"id":"1f8398b9-eeed-51e8-aac9-07134b23d60f","excerpt":"collection of functions  file can hold different modules Module Attributes set at compile time values are only accessible inside the module as annotations as constants as temporary storage","frontmatter":{"date":"March 07, 2021","path":"/elixir/modules","title":"Modules","category":"Elixir"}}},{"node":{"id":"85e6dc56-986c-5f98-8d6d-1fcff02e31ed","excerpt":"elixir looks for a way to make the value of the left side the same as the value of the right side","frontmatter":{"date":"March 14, 2021","path":"/elixir/pattern-matching","title":"Pattern Matching","category":"Elixir"}}},{"node":{"id":"c75e3db5-8559-5ffa-97ab-59cf68e94e0e","excerpt":"takes the output from the expression on its left and pass it as the first argument to the function call on its right using  symbol at compile time, its transformed to the nested call version","frontmatter":{"date":"March 14, 2021","path":"/elixir/pipe-operator","title":"Pipe Operator","category":"Elixir"}}},{"node":{"id":"50c2c2d1-56ac-55a2-a89b-7e184430cd87","excerpt":"very lightweight each process is isolated from each other, a failure in a process will never crash or corrupt another process Erlang VM knows how to run them concurrently and in parallel Let It Crash focus on how the system can recover from crashes…","frontmatter":{"date":"March 07, 2021","path":"/elixir/processes","title":"Processes","category":"Elixir"}}},{"node":{"id":"a9021c90-3a97-5a3b-a7e1-900faa2e0e50","excerpt":"map reduce","frontmatter":{"date":"March 07, 2021","path":"/elixir/recursion","title":"Recursion","category":"Elixir"}}},{"node":{"id":"aa86fde2-dcfc-5fbe-90d7-c260b9b7424d","excerpt":"require a module to be able to use its macros","frontmatter":{"date":"March 07, 2021","path":"/elixir/require","title":"require","category":"Elixir"}}},{"node":{"id":"55cc9443-bc08-54a9-9b32-7f8d2475d4fb","excerpt":"designed to emit a series of values, one by one","frontmatter":{"date":"April 11, 2021","path":"/elixir/stream","title":"Stream","category":"Elixir"}}},{"node":{"id":"06c2d403-4237-5f63-bb36-154a589aede5","excerpt":"Note: you can't use a variable on the left side of <>","frontmatter":{"date":"March 14, 2021","path":"/elixir/strings","title":"Strings","category":"Elixir"}}},{"node":{"id":"7af299ac-a406-50e5-96dc-ba318ff17d9f","excerpt":"built on top of maps that provide compile checks and default values take the name of the module they are defined Accessing Updating similar to maps Pattern match","frontmatter":{"date":"March 07, 2021","path":"/elixir/structs","title":"Structs","category":"Elixir"}}},{"node":{"id":"82f0d39c-3ed7-598b-953c-2c8de2eeb842","excerpt":"build on top of the spawn functions to provide better error reports and introspection abstraction for running code concurrently useful for running single async functions Task.start/1 does not return the result Task.async/1 returns Task struct…","frontmatter":{"date":"March 07, 2021","path":"/elixir/tasks","title":"Tasks","category":"Elixir"}}},{"node":{"id":"72974a36-823d-5854-a761-f66b048b9d22","excerpt":"ordered collection of values once created, it can't be modified usually 2 to 4 elements in length","frontmatter":{"date":"March 14, 2021","path":"/elixir/tuples","title":"Tuples","category":"Elixir"}}},{"node":{"id":"48e64845-2ce0-57fc-b99b-ccef895f625a","excerpt":"notation for declaring types and specifications","frontmatter":{"date":"March 14, 2021","path":"/elixir/typespecs","title":"Typespecs","category":"Elixir"}}},{"node":{"id":"865afee8-1646-5bb0-bc82-7678ea61b3bf","excerpt":"macro frequently used as an extension point when you use a module , you allow that module to inject any code\nin current module such as import itself or other modules","frontmatter":{"date":"March 07, 2021","path":"/elixir/use","title":"use","category":"Elixir"}}},{"node":{"id":"7ccbb9eb-3d42-516e-8aa2-099f46423147","excerpt":"Use consistent naming in your schema Use input object type as an argument for graphQL queries and mutations Return updated resource on mutations","frontmatter":{"date":"March 08, 2021","path":"/graphql/best-practices","title":"Best Practices","category":"GraphQL"}}},{"node":{"id":"06a0d943-af36-5363-b094-5a51be565c37","excerpt":"way to write chunks of GraphQL that can target a specific type always target a type using  Named Fragments like inline fragments but reusable","frontmatter":{"date":"April 11, 2021","path":"/graphql/fragments","title":"Fragments","category":"GraphQL"}}},{"node":{"id":"4d84df95-e8c3-5ebd-83ab-de86194e1edc","excerpt":"","frontmatter":{"date":"December 06, 2020","path":"/graphql/mutations","title":"Mutations","category":"GraphQL"}}},{"node":{"id":"54dbcd68-3782-5bd8-b34f-3a952ac475f6","excerpt":"a specification an expressive query language for your data which you can think of as a graph of related objects and other fields lets you query your data and get exactly what you want supports three types of operations: queries mutations subscription…","frontmatter":{"date":"December 05, 2020","path":"/graphql/overview","title":"Overview","category":"GraphQL"}}},{"node":{"id":"72d539ea-b15d-573c-bcb1-1a943cc3ebf6","excerpt":"Simple Query Multiple Resources","frontmatter":{"date":"December 05, 2020","path":"/graphql/queries","title":"Queries","category":"GraphQL"}}},{"node":{"id":"d1246be7-e9e8-517f-a1e1-c472ed6be0e0","excerpt":"javascript framework strict conventions","frontmatter":{"date":"March 08, 2021","path":"/graphql/relay","title":"Relay","category":"GraphQL"}}},{"node":{"id":"6ea483d2-f64e-509d-8a78-0858a753caec","excerpt":"describe the shape of your data as graph should reflect any relations as  defines queries, mutations and subscriptions as API developer, you are responsible for accurately building the\nrepresentation of your data Clients can: instrospect the schema…","frontmatter":{"date":"April 11, 2021","path":"/graphql/schema","title":"Schema","category":"GraphQL"}}},{"node":{"id":"d5ebd24a-dda9-5a6d-8326-83cf2e5ac556","excerpt":"","frontmatter":{"date":"December 06, 2020","path":"/graphql/subscriptions","title":"Subscriptions","category":"GraphQL"}}},{"node":{"id":"31853a07-0977-57f0-bd51-c8dc35029879","excerpt":"collection of something","frontmatter":{"date":"March 20, 2021","path":"/javascript/array","title":"Array","category":"Javascript"}}},{"node":{"id":"a67bd056-6f9a-5c0d-9c57-41037ffefbcc","excerpt":"compact form of function expressions implicit return doesn't rebind the value of","frontmatter":{"date":"April 27, 2020","path":"/javascript/arrow-functions","title":"Arrow Functions","category":"Javascript"}}},{"node":{"id":"af2dcbc9-d5d7-5518-a8e5-300473e73922","excerpt":"inside a function marked as , you can use  in front of an expression that returns a promise the execution of the async function is paused until the promise is resolved","frontmatter":{"date":"April 27, 2020","path":"/javascript/async-await","title":"Async Await","category":"Javascript"}}},{"node":{"id":"154f0e38-776f-5b96-bd9d-d583c45741bf","excerpt":"Primitive Types represent a single value that is not an object undefined special value to indicate the variable is not defined avoid setting a variable to undefined, use null instead null lack of existence boolean number string symbol new in es6","frontmatter":{"date":"March 20, 2021","path":"/javascript/data-types","title":"Data Types","category":"Javascript"}}},{"node":{"id":"77ac7b92-2c22-5abd-ba45-680fb9c19185","excerpt":"Array Object Setting a default value Renaming a variable","frontmatter":{"date":"April 25, 2020","path":"/javascript/destructuring","title":"Destructuring","category":"Javascript"}}},{"node":{"id":"4eb24a96-e142-5285-b03f-3f6a37eb114d","excerpt":"a special type of object Function Statement Function Expression Expression - code that results into a value not hoisted Function Overloading not present in js Function Constructor a function that is used to construct objects by convention, name…","frontmatter":{"date":"March 20, 2021","path":"/javascript/functions","title":"Functions","category":"Javascript"}}},{"node":{"id":"728ed2cd-6244-5f0c-97a6-2984b55d08dc","excerpt":"Hoisting setup memory space for variable all variables in javascript is initially set to undefined global object not inside a function equivalent to  object and  in browser Single Thread one command at a time Scope where a variable is available in…","frontmatter":{"date":"March 20, 2021","path":"/javascript/glosary","title":"Glossary","category":"Javascript"}}},{"node":{"id":"ccf47702-b6cb-5b93-9ea6-8298b66784c4","excerpt":"way to execute functions immediately, as soon as they are created doesn't pollute global scope","frontmatter":{"date":"March 27, 2021","path":"/javascript/iife","title":"Immediately Invoked Function Expression","category":"Javascript"}}},{"node":{"id":"4ad5bb3d-e6ae-5766-a808-6c2db789fa93","excerpt":"inspired by js object literal all JSON is a valid js object literal","frontmatter":{"date":"March 27, 2021","path":"/javascript/json","title":"JSON","category":"Javascript"}}},{"node":{"id":"e7400757-5aa6-5119-abac-d14bf622d784","excerpt":"collection of name and value pairs Access prefer member access operator only use computed member access operator for dynamic property Pass by reference all objects including functions are pass by reference","frontmatter":{"date":"March 27, 2021","path":"/javascript/object","title":"Object","category":"Javascript"}}},{"node":{"id":"4eeb2ceb-4994-5b80-a03a-a636eb7f7099","excerpt":"Consuming a promise","frontmatter":{"date":"April 27, 2020","path":"/javascript/promises","title":"Promises","category":"Javascript"}}},{"node":{"id":"7051f07a-61cf-558f-a5f7-5e109a4f4d9f","excerpt":"one object gets access to the properties and methods of another object ideally, functions should be attached to prototype to save memory space Using a function constructor","frontmatter":{"date":"March 20, 2021","path":"/javascript/prototypal-inheritance","title":"Prototypal Inheritance","category":"Javascript"}}},{"node":{"id":"9d559d9e-b5d4-5947-8f05-58bf38a0cf4a","excerpt":"literally stacks code as if it was one file","frontmatter":{"date":"March 20, 2021","path":"/javascript/scripts","title":"Scripts","category":"Javascript"}}},{"node":{"id":"c7672372-48c0-584c-b782-51a51c384a2a","excerpt":"value depends on where and how the function is called object when a function is attach to an object,  becomes the object call, apply and bind can be use to control the value of","frontmatter":{"date":"March 19, 2021","path":"/javascript/this","title":"this","category":"Javascript"}}},{"node":{"id":"5aa9561c-c5da-595c-8333-efab7675ceb3","excerpt":"Variables let and const are hoisted but you cannot access them until it is evaluated var function scope let block scope () can only be declared once per block const block scope () can only be declared once per block can't be reassigned","frontmatter":{"date":"March 19, 2021","path":"/javascript/variables","title":"Variables","category":"Javascript"}}},{"node":{"id":"3be4c98a-2732-5b2c-9187-47c73157c751","excerpt":"ls short for list cd short for change directory pwd short for print working directory cp short for copy rm mv cat head tail ln grep sed","frontmatter":{"date":"May 11, 2020","path":"/linux/commands","title":"Commands","category":"Linux"}}},{"node":{"id":"724b9ad2-522b-5f41-a1f8-77e90200d365","excerpt":"General don't commit  to version control, add it in  add  instead always be careful with secrets follow one dot rule (law of demeter) Models use scope when you have repeating where clauses Controllers use thin controllers all the time, put the logic…","frontmatter":{"date":"May 07, 2020","path":"/rails/best-practices","title":"Best Practices","category":"Rails"}}},{"node":{"id":"13c4638a-c41e-5d89-8a3b-4040e6b26d15","excerpt":"Rollback last migration Reset test database","frontmatter":{"date":"May 08, 2020","path":"/rails/commands","title":"Commands","category":"Rails"}}},{"node":{"id":"564087e4-de97-5050-b4cc-3124250032c5","excerpt":"Naming follows linguistic convention models - singular controllers - plural database tables - plural","frontmatter":{"date":"May 07, 2020","path":"/rails/conventions","title":"Conventions","category":"Rails"}}},{"node":{"id":"e6db188b-f898-5155-974c-05932bf6c8ab","excerpt":"Commands Troubleshooting  fails after fixing a merge conflict. This happens when you edit  directly. Mostly likely, the editor you're using appended a newline at the end. In you're using vim, newline can be removed by opening the file and type:","frontmatter":{"date":"May 07, 2020","path":"/rails/credentials","title":"Credentials","category":"Rails"}}},{"node":{"id":"01ae373e-64fe-5267-8f3b-b4dc75406fd7","excerpt":"Examples","frontmatter":{"date":"May 10, 2020","path":"/react/factory-bot","title":"FactoryBot","category":"Rails"}}},{"node":{"id":"06d85940-c702-5b37-9295-3ea2250fa69b","excerpt":"form_with can be used to replace  and","frontmatter":{"date":"May 19, 2020","path":"/rails/form-helpers","title":"Form Helpers","category":"Rails"}}},{"node":{"id":"58799705-871f-5562-95f4-1a5e7760c690","excerpt":"Creating table with association Updating existing table","frontmatter":{"date":"April 25, 2020","path":"/rails/migrations","title":"Migrations","category":"Rails"}}},{"node":{"id":"c5c08384-7352-50d8-b000-b2cdaf75212d","excerpt":"Validations","frontmatter":{"date":"May 08, 2020","path":"/rails/models","title":"Models","category":"Rails"}}},{"node":{"id":"7461302f-f2b4-5de3-bfb5-7be932225b3a","excerpt":"Add column for id and type or Update Model Association Usage","frontmatter":{"date":"May 08, 2020","path":"/rails/polymorphic-association","title":"Polymorphic Association","category":"Rails"}}},{"node":{"id":"562cd219-291e-501b-8092-16e51c9d325b","excerpt":"Model spec Service object spec","frontmatter":{"date":"May 10, 2020","path":"/rails/rspec","title":"Rspec","category":"Rails"}}},{"node":{"id":"2698fcfd-f82c-551b-9a13-39584e5c8cde","excerpt":"Sample","frontmatter":{"date":"May 19, 2020","path":"/rails/service-objects","title":"Service Objects","category":"Rails"}}},{"node":{"id":"1be0921f-9077-5b5a-99ef-49b3afea9e57","excerpt":"Command Rename  to , and add it to  Always keep README.md up to date Decide on ruby and nodejs version, preferably use asdf Setup rspec test suite Setup linters rubocop stylelint prettier eslint Configure CI to run linters and tests Configure auto…","frontmatter":{"date":"May 07, 2020","path":"/rails/setting-up-new-project","title":"Setting Up New Project","category":"Rails"}}},{"node":{"id":"99109cf3-4aff-5f93-9afb-1d41bfd2346f","excerpt":"Postgres PG::ConnectionBad could not connect to server: No such file or directory Is the server running locally and accepting connections on Unix domain socket \"/tmp/.s.PGSQL.5432\"? Possible causes: could be a stale PID file it could be failing…","frontmatter":{"date":"May 07, 2020","path":"/rails/troubleshooting","title":"Troubleshooting","category":"Rails"}}},{"node":{"id":"2b85416a-ef41-5ee6-8d33-b146bf8d003d","excerpt":"use all react features without a class reuse stateful logic between components Rules hooks should be defined at the top of the component can't be put inside if else","frontmatter":{"date":"April 27, 2020","path":"/react/hooks","title":"Hooks","category":"React"}}},{"node":{"id":"5d0abe36-1367-5e35-b395-9ffe03aa1c53","excerpt":"replaces enzyme What to test? render right things are showing up output on the DOM Tips Avoid testing states Think how will you test it in real life Tests should not fail after simple refactoring Usage You also need to configure a test runner…","frontmatter":{"date":"April 25, 2020","path":"/react/react-testing-library","title":"React Testing Library","category":"React"}}},{"node":{"id":"75786a23-4ba6-594e-92e1-95575c8e67e9","excerpt":"ensure column values are unique can help prevent NULL values","frontmatter":{"date":"March 17, 2021","path":"/sql/constraints","title":"Constraints","category":"SQL"}}},{"node":{"id":"54a7fc41-c884-5748-b877-b31cdc6a6423","excerpt":"removes one or more rows from one table","frontmatter":{"date":"March 17, 2021","path":"/sql/delete","title":"Delete","category":"SQL"}}},{"node":{"id":"95e6dd47-5017-55db-b8ef-e448a4c6b15f","excerpt":"improve query performance enforce uniqueness across columns indexing makes reading faster but writing slower","frontmatter":{"date":"March 08, 2021","path":"/sql/index","title":"Index","category":"SQL"}}},{"node":{"id":"5f42bf6a-fa63-5581-9216-0a717350e36f","excerpt":"adds one or more rows into a table","frontmatter":{"date":"March 17, 2021","path":"/sql/insert","title":"Insert","category":"SQL"}}},{"node":{"id":"c03de72a-113e-5f79-b455-d207eafbe649","excerpt":"retrieves one or more rows from one or more tables distinct where use to filter rows and if both are true, row is included or if either is true, row is included between acts on a column and two values like  and  wildcards in is special operator only…","frontmatter":{"date":"March 17, 2021","path":"/sql/select","title":"Select","category":"SQL"}}},{"node":{"id":"1da9b983-6133-5342-ab53-fafeb37d6f17","excerpt":"modifies one or more rows in a table","frontmatter":{"date":"March 17, 2021","path":"/sql/update","title":"Update","category":"SQL"}}},{"node":{"id":"89be67dd-54c3-5600-aa7e-6195564d361d","excerpt":"Sample config for elixir / phoenix","frontmatter":{"date":"October 13, 2020","path":"/tools/github-workflows","title":"Github Workflows","category":"Tools"}}},{"node":{"id":"0c290f6a-4019-52a7-a513-d4c21bd68869","excerpt":"Boolean Numbers String Array Function","frontmatter":{"date":"April 27, 2020","path":"/typescript/basic-types","title":"Basic Types","category":"Typescript"}}},{"node":{"id":"81bb19f2-9b6f-50fb-b79a-3358c896a448","excerpt":"Interface","frontmatter":{"date":"March 14, 2021","path":"/typescript/interface","title":"Interface","category":"Typescript"}}},{"node":{"id":"f63172d4-58c1-5320-b4af-019bcf95ba45","excerpt":"I J K L b w f t % { }","frontmatter":{"date":"March 08, 2021","path":"/vim/common-movements","title":"Common Movements","category":"Vim"}}}]}}}