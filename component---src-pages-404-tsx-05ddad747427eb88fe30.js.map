{"version":3,"sources":["webpack:///./src/components/Sidebar.module.scss","webpack:///./src/pages/404.module.scss","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/404.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Layout.module.scss","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/NoteLink.tsx","webpack:///./src/components/Sidebar.tsx","webpack:///./src/components/Layout.tsx"],"names":["module","exports","loader","enqueue","React","createContext","NotFoundPage","className","styles","code","text","m","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","NoteLink","post","to","frontmatter","path","title","Sidebar","Notes","allMarkdownRemark","edges","map","edge","key","node","id","sidebar","Layout","children","container","main"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,QAAU,mC,qBCA5BD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,6B,k4BCD3D,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,oCChB/C,iEAceC,UATM,WACnB,OACE,kBAAC,IAAD,KACE,wBAAIC,UAAWC,IAAOC,MAAtB,QACA,uBAAGF,UAAWC,IAAOE,MAArB,sB,qBCTN,IAAsBC,EAKpBX,EAAOC,SALaU,EAKWC,EAAQ,UALRD,EAAEE,SAAYF,G,qBCC/CX,EAAOC,QAAU,CAAC,UAAY,oC,iHCqBfa,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEZ,IAAMa,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,oHCEIC,EANE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BACE,kBAAC,IAAD,CAAMC,GAAID,EAAKE,YAAYC,MAAOH,EAAKE,YAAYE,S,qBC8BxCC,EA5BC,WAAmB,IAqB3BC,EArB2B,OAE/BC,kBAAqBC,MAmBHC,KAAI,SAACC,GAAD,OACtB,kBAAC,EAAD,CAAUC,IAAKD,EAAKE,KAAKC,GAAIb,KAAMU,EAAKE,UAG1C,OAAO,2BAAO1B,UAAWC,IAAO2B,SAAUR,ICd7BS,IAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,yBAAK9B,UAAWC,IAAO8B,WACrB,kBAAC,EAAD,MACA,0BAAM/B,UAAWC,IAAO+B,MAAOF","file":"component---src-pages-404-tsx-05ddad747427eb88fe30.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar-module--sidebar--1oIXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"_404-module--code--m0LQI\",\"text\":\"_404-module--text--2YT6n\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\n\nimport Layout from '../components/Layout'\nimport styles from './404.module.scss'\n\nconst NotFoundPage = (): JSX.Element => {\n  return (\n    <Layout>\n      <h1 className={styles.code}>404 </h1>\n      <p className={styles.text}>Page not found </p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout-module--container--2DmHh\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst NoteLink = ({ post }): JSX.Element => (\n  <div>\n    <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n  </div>\n)\n\nexport default NoteLink\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport NoteLink from '../components/NoteLink'\n\nimport styles from './Sidebar.module.scss'\n\nconst Sidebar = (): JSX.Element => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___title] }) {\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 250)\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              path\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const Notes = edges.map((edge) => (\n    <NoteLink key={edge.node.id} post={edge.node} />\n  ))\n\n  return <aside className={styles.sidebar}>{Notes}</aside>\n}\n\nexport default Sidebar\n","import React from 'react'\n\nimport '../styles/base.scss'\nimport styles from './Layout.module.scss'\n\nimport Sidebar from '../components/Sidebar'\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Layout = ({ children }: LayoutProps): JSX.Element => (\n  <div className={styles.container}>\n    <Sidebar />\n    <main className={styles.main}>{children}</main>\n  </div>\n)\n\nexport default Layout\n"],"sourceRoot":""}